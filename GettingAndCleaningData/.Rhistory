a <- available.packages()
head(rownames(a),3)
install.packages(c("slidify","ggplot2","devtools"))
source("http://bioconductor.org/biocLite.R")
biocLite()
library("ggplot2", lib.loc="~/R/win-library/3.4")
search()
detach("package:BiocInstaller", unload=TRUE)
search()
installed.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
q()
print("Hello World")
install.packages("swirl")
lapply
x <-list(a=1:5,b=rnorm(10))
x
lapply(x, mean)
x <- 1:4
lapply(x, runif,min=0,max=10)
x <- matrix(rnorm(200),20,10)
apply(x, 2, mean)
apply(x, 1, sum)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep, 1:4,4:1)
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(xlsx)
setwd("F:/Coursera/Data Science Specialization/GettingAndCleaningData")
library(xlsx)
cameraData <- read.csv("./data/cameras.csv",header = TRUE)
write.xlsx(cameraData,"./da")
library(xlsx)
cameraData <- read.csv("./data/cameras.csv",header = TRUE)
write.xlsx(cameraData,"./data/cameras.xlsx")
?read.xlsx
library(xlsx)
cameraData <-read.xlsx("./data/cameras.xlsx",sheetIndex = 1)
head(cameraData)
library(XML)
install.packages("XML")
library(XML)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <-xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <-xmlRoot(doc)
xmlName(rootNode)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <-xmlTreeParse(fileUrl,useInternal=TRUE)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <-xmlTreeParse(fileUrl)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
download.file(fileUrl,destfile = "test.xml")
doc <- xmlTreeParse("test.xml",useInternalNodes = TRUE)
rootNode <-xmlRoot(doc)
doc <- xmlTreeParse(fileUrl ,useInternalNodes = TRUE)
rootNode <-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[1]
rootNode[[1]]
xmlSApply(rootNode,xmlValue)
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
library(data.table)
install.packages("data.table")
library(data.table)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
tables()
DT[2,]
DT[2,]
DT[2,]
DT[DT$y=='a']
DT[c(2,3)]
DT
