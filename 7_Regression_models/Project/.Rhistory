mapping=ggplot2::aes(colour = sex),
lower=list(combo=wrap("facethist",binwidth=1)))
library(GGally)
ggpairs(data=tips, title="Motor Trend Car Road Tests")
library(GGally)
ggpairs(data=mtcars, title="Motor Trend Car Road Tests")
str(mtcars)
library(ggplot2)
library(gridExtra)
g <- ggplot(data = mtcars,aes(y=mpg))
g1 <- g + geom_point(aes(x=disp)) + labs(title="disp vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=disp))
g2 <- g + geom_point(aes(x=hp)) + labs(title="hp vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=hp))
g3 <- g + geom_point(aes(x=drat)) + labs(title="drat vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=drat))
g4 <- g + geom_point(aes(x=wt)) + labs(title="wt vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=wt))
g5 <- geom_point(aes(x=qsec)) + labs(title="qsec vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=qsec))
str(mtcars)
library(ggplot2)
library(gridExtra)
g <- ggplot(data = mtcars,aes(y=mpg))
g1 <- g + geom_point(aes(x=disp)) + labs(title="disp vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=disp))
g2 <- g + geom_point(aes(x=hp)) + labs(title="hp vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=hp))
g3 <- g + geom_point(aes(x=drat)) + labs(title="drat vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=drat))
g4 <- g + geom_point(aes(x=wt)) + labs(title="wt vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=wt))
g5 <- g + geom_point(aes(x=qsec)) + labs(title="qsec vs mpg") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method = "lm",se=FALSE,aes(x=qsec))
grid.arrange(g1,g2,g3,g4,g5,ncol=2,top="Scatter Plot")
library(ggplot2)
library(gridExtra)
g <- ggplot(data = mtcars,aes(y=mpg))
g1 <- g + geom_boxplot(aes(x=cyl,fill=cyl)) + labs(title="Cyl vs mpg") +
theme(plot.title = element_text(hjust = 0.5))
g2 <- g + geom_boxplot(aes(x=vs,fill=vs)) + labs(title="VS vs mpg") +
theme(plot.title = element_text(hjust = 0.5))
g3 <- g + geom_boxplot(aes(x=am,fill=am)) + labs(title="am vs mpg") +
theme(plot.title = element_text(hjust = 0.5))
g4 <- g + geom_boxplot(aes(x=gear,fill=gear)) + labs(title="gear vs mpg") +
theme(plot.title = element_text(hjust = 0.5))
g5 <- g + geom_boxplot(aes(x=carb,fill=carb)) + labs(title="carb vs mpg") +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(g1,g2,g3,g4,g5,ncol=2,top="BoxPlot")
mpg
library(dplyr)
mtcars %>% select(mpg,am)
library(dplyr)
mtcars %>% select(mpg,am) %>%group_by(am) %>%summarise(mean=mean(mpg))
library(dplyr)
mData <- mtcars %>% select(mpg,am) %>%group_by(am) %>%summarise(mean=mean(mpg))
mData
mData[1]
mData[1,1]
mData[1,2]
summary(lm(mpg~am,data=mtcars))
mData
mData[1,2]
mData[1,2]
fit2 <- lm(mpg~.,data=mtcars)
anova(fit1,fit2)
fit1 <- lm(mpg~am,data=mtcars)
summary(fit1)
fit2 <- lm(mpg~.,data=mtcars)
anova(fit1,fit2)
summary(fit2)
coef(summary(fit2))
coef(summary(fit2))[1]
coef(summary(fit2))[1,1]
cofficen <- coef(summary(fit2))
coefficen
cofficen
max(cofficen[4,])
max(cofficen[,4])
rownames(cofficen)
maxPvalue <- function(model){
coeff <- coef(summary(model))
rows <- rownames(coeff)
p_values <- coeff[,4]
p_value
}
maxPvalue(fit2)
maxPvalue <- function(model){
coeff <- coef(summary(model))
rows <- rownames(coeff)
p_values <- coeff[,4]
p_values
}
maxPvalue <- function(model){
sds
d
s
d
sd
s
d
w
wew]
maxPvalue(fit2)
typeof(maxPvalue(fit2))
names(maxPvalue(fit2))
maxPvalue(fit2)==max(maxPvalue(fit2))
maxPvalue(fit2)[maxPvalue(fit2)==max(maxPvalue(fit2))]
names(maxPvalue(fit2)[maxPvalue(fit2)==max(maxPvalue(fit2))])
maxPvalue <- function(model){
coeff <- coef(summary(model))
rows <- rownames(coeff)
p_values <- coeff[,4]
names(p_values[p_values==max(p_values)])
}
maxPvalue(fit1)
maxPvalue(fit2)
anova(c(fit1,fit2))
eval("annova(fit1,fit2)")
eval(paste("annova(","fit1,fit2)"))
eval(paste(text="annova(","fit1,fit2)"))
a <- "anova(fit1,fit2)"
eval(a)
eval(paste(text=a))
eval(parse(text="5+5"))
eval(parse(text="anova(fit1,fit2)"))
head(mtcars)
mtcars[,1:2]
lm(mtcars[,1],mtcars[,2])
lm(mtcars[,1]~mtcars[,2])
colnames(mtcars)
col <- colnames(mtcars)
lm(col[1]~col[2],data=mtcars)
lm("mpg"~"cyl",data=mtcars)
lm(mpg~cyl,data=mtcars)
lm(as.formula("mpg"~"cyl"),data=mtcars)
lm(formula=as.formula("mpg"~"cyl"),data=mtcars)
as.formula("mpg"~"cyl")
as.formula("mpg~cyl")
col <- colnames(mtcars)
mylist <- list
mylist <- list()
mylist[[1]]=1
mylist
mylist[[2]]=2
mylist
mylist <- list()
mylist[1]=1
mylist
col <- colnames(mtcars)
models <- list()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
for(j in 3:i){
myformula <- paste(paste(myformula,"+"),col[j])
}
print(myformula)
}
myformula <- paste(paste(col[1],"~"),col[2])
print(myformula)
3:2
col <- colnames(mtcars)
models <- list()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
print(myformula)
}
fit2 <- lm(mpg~.,data=mtcars)
anova(fit1,fit2)
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformula,myformula)
}
myformulae
}
listOfFormulae(col)
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
fit2 <- lm(mpg~.,data=mtcars)
anova(fit1,fit2)
listOfFormulae(col)
grep("am",col)
mtcars[,c(1,9,2,3,4,5,6,7,8,10,11)]
am_colNum <- grep("am",colnames(mtcars))
am_colNum
am_colNum <- grep("am",colnames(mtcars))
reordered_cols <- c(1,am_colNum)
for(i in 2:ncol()){
if(i!=am_colNum){
reordered_cols <- c(reordered_cols,i)
}
}
am_colNum <- grep("am",colnames(mtcars))
reordered_cols <- c(1,am_colNum)
for(i in 2:ncol(mtcars)){
if(i!=am_colNum){
reordered_cols <- c(reordered_cols,i)
}
}
head(mtcars[,reordered_cols])
am_colNum <- grep("am",colnames(mtcars))
reordered_cols <- c(1,am_colNum)
for(i in 2:ncol(mtcars)){
if(i!=am_colNum){
reordered_cols <- c(reordered_cols,i)
}
}
mtcars <- mtcars[,reordered_cols]
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
listOfFormulae(colnames(mtcars))
listOfFormulae(colnames(mtcars))[2:]
listOfFormulae(colnames(mtcars))[2]
listOfFormulae(colnames(mtcars))[2:11]
listOfFormulae(colnames(mtcars))[2:10]
myformula <- listOfFormulae(colnames(mtcars))
myformula
myformulae <- listOfFormulae(colnames(mtcars))
myformulae
myformulae[2:]
myformulae[2:,]
myformulae[2:10]
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- sapply(myformulae,function(x){update(fit1,as.formula(x))})
other_models
other_models[1]
other_models[2]
other_models[3]
other_models[4]
other_models[5]
typeof(other_models)
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
i<- 1
for(myformula in myformulae){
other_models[i] <- update(fit1,as.formula(myformula))
}
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
i<- 1
for(myformula in myformulae){
other_models[i] <- update(fit1,as.formula(myformula))
i <- i + 1
}
other_models
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
i<- 1
for(myformula in myformulae){
update(fit1,as.formula(myformula))
}
for(myformula in myformulae){
update(fit1,as.formula(myformula))
}
for(myformula in myformulae){
lm(mtcars,as.formula(myformula))
}
for(myformula in myformulae){
lm(as.formula(myformula),data=mtcars)
}
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
i<- 1
for(myformula in myformulae){
print(myformulae)
other_models[i]<-lm(as.formula(myformula),data=mtcars)
i<i +1
}
listOfFormulae<- function(col){
myformulae <- as.character()
for(i in 2:ncol(mtcars)){
myformula <- paste(paste(col[1],"~"),col[2])
j=3
while(j<=i){
myformula <- paste(paste(myformula,"+"),col[j])
j <- j +1
}
myformulae <- c(myformulae,myformula)
}
myformulae
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
i<- 1
for(myformula in myformulae){
print(myformulae)
other_models[i]<-lm(as.formula(myformula),data=mtcars)
i<-i +1
}
?update
sapply(myformulae, paste)
sapply(myformulae, paste,sep=";")
lapply(myformula,paste,sep=",")
sapply(myformul,paste,collapse = " ")
sapply(myformulae,paste,collapse = " ")
myformulae
as.character(myformulae)
myformulae <- listOfFormulae(colnames(mtcars))
myformulae
typeof
typeof(myformulae)
myformula
deltat(myformula)
rm(myformula)
sapply(myformulae,lm,data=mtcars)
t <-sapply(myformulae,lm,data=mtcars)
type(t)
typeof(t)
names(t)
colnames(t)
t[,1]
summary(t[,1])
other_models <- list(1)
other_models <- list(other_models,1)
other_models
install.packages("rlist")
library(rlist)
list.append(list(),fit1)
t <-list.append(list(),fit1)
t[1]
summary(t[[1]])
t <-list.append(t,fit1)
t
paste("model",i,sep = "")
i=2
paste("model",i,sep = "")
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
for(myformula in myformulae){
list.append(other_models,update(as.formula(myformula)))
}
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
for(myformula in myformulae){
list.append(other_models,update(fit1,as.formula(myformula)))
}
other_models
myformulae <- listOfFormulae(colnames(mtcars))[2:10]
other_models <- list()
for(myformula in myformulae){
other_models<-list.append(other_models,update(fit1,as.formula(myformula)))
}
other_models
other_models[1]
anova(fit1,other_models[1])
other_models[1]
other_models[[1]]
anova(fit1,other_models[[1]])
length(other_models)
eval(paste(text="2+2"))
eval(paste(text="2+2"))
eval(paste(text="2+2"))
eval(parse(text="anova(fit1,fit2)"))
?paste
cat
?cat
anova_func<- sapply(1:length(3),function(x){cat(anova_func,"other_models[[",x,"]]",sep = "")})
anova_func <-  "anova(fit1,"
anova_func<- sapply(1:length(3),function(x){cat(anova_func,"other_models[[",x,"]]",sep = "")})
anova_func<- sapply(1:length(other_models),function(x){cat(anova_func,"other_models[[",x,"]]",sep=",")})
anova_func <-  "anova(fit1,"
anova_func<- sapply(1:length(other_models),function(x){cat(anova_func,"other_models[[",x,"]]",sep=",")})
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- cat(anova_func,"other_models[[",i,"]]",sep = ",")
}
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- cat(anova_func,"other_models[[",i,"]]",",",sep = "")
}
anova_func <- substr(anova_func,1,length(anova_func))
anova_func
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- cat(anova_func,"other_models[[",i,"]]",",",sep = "")
}
substr(anova_func,1,length(anova_func))
typeof(anova_func)
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- cat(anova_func,"other_models[[",i,"]]",",",sep = "")
}
typeof(anova_func)
anova_func
cat
for(i in 1:length(other_models)){
anova_func <- cat(anova_func,file = anova_func,"other_models[[",i,"]]",",",sep = "")
}
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- c(anova_func,"other_models[[",i,"]]",",")
anova_func <- paste(anova_func,sep = "")
}
anova_func
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- c(anova_func,"other_models[[",i,"]]",",")
anova_func <- paste(anova_func,collapse = "")
}
anova_func
anova_func <- paste(substr(anova_func,1,length(anova_func)-1),")",sep = "")
anova_func
anova_func <-  "anova(fit1,"
for(i in 1:length(other_models)){
anova_func <- c(anova_func,"other_models[[",i,"]]",",")
anova_func <- paste(anova_func,collapse = "")
}
substr(anova_func,1,length(anova_func)-1)
anova_func
length(anova_func)
length(anova_func[1])
length(anova_func[[1]])
paste(substr(anova_func,1,nchar(anova_func)-1),")",sep = "")
anova_func <- paste(substr(anova_func,1,nchar(anova_func)-1),")",sep = "")
eval(parse(anova_func))
eval(parse(text=anova_func))
