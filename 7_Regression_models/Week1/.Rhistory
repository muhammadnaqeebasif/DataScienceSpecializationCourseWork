geom_bar(stat = "identity",fill=pal(10)) +ylab("Total Fatalities") +xlab("Event Type")+
theme(plot.title = element_text(hjust = 0.5))+coord_flip() +
labs(title="Impact of Severe Weather Events on Health")
g2 <- ggplot(data=injuries_data,aes(x=reorder(EVTYPE,total_injuries),y=total_injuries))+
geom_bar(stat = "identity",fill=pal(10)) +ylab("Total Injuries") +xlab("Event Type")+
theme(plot.title = element_text(hjust = 0.5))+coord_flip()
grid.arrange(g1,g2,ncol=1)
crop_data
total_ec_data
property_data
13972566000
View(crop_data)
View(crop_data)
13972566000 < 44657709800
13972566000 < 144657709800
library(swirl)
swirl()
0.997 *.001
(1-0.001)*(1-0.985)
0.000997/(0.000997+0.01485)
0.000997/(.997*.001 + .015*.999
)
P_Pos_D <- 0.75
P_Neg_ND <- 0.52
P_D <- 0.3
(P_Pos_D *P_D)/((P_Pos_D *P_D) + (1-P_Neg_ND)*(1-P_D))
0.1+0.4+0.9+1.6
library(swirl)
swirl()
sum(c(1,2,3,4,5,6)*1/6)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
expect_dice(dice_high+dice_low)/2
View(myfunc)
View(myfunc)
integrate(myfunc,0,2)
spoop
spop
mean(spop)
allsam
apply(allsam, mean, ...)
apply(allsam, mean)
apply(allsam, 1,mean)
mean(smeans)
qnorm(0.95)
pnorm(9)
pnorm(1160,mean = 1020,sd=50)
1-pnorm(1160,mean = 1020,sd=50)
(1-pnorm(1160,mean = 1020,sd=50))*100
qnorm(.75,1020,50)
P_B <- 0.12
P_A_B <- 0.9
(0.88*.95)/((0.88*.95)+(0.07*0.05))
choose(8,7) *0.5^8 + choose(8,7) *0.5^8
choose(8,7) *0.5^8 + choose(8,8) *0.5^8
pbinom(8,7,0.5)+pbinom(8,8,0.5)
pbinom(7,8,0.5)+pbinom(7,8,0.5)
pbinom(7,8,0.5)+pbinom(8,8,0.5)
pbinom(7,size=8,0.5)+pbinom(8,size=8,0.5)
pbinom(7,size=8,0.5)
x <- seq(0,50,by=1)
> y <- dbinom(x,50,0.2)
> plot(x,y)
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2); plot(x,y)
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2) plot(x,y)
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2) plot(x,y)
x <- seq(0,50,by=1)
y <- dbinom(x,50,0.2); plot(x,y)
y
plot(x,y)
x <- seq(0,8,by=1)
y <- dbinom(x,8,0.2)
plot(x,y)
x <- seq(0,8,by=1)
y <- dbinom(x,8,0.5)
plot(x,y)
choose(8,7) *0.5^8
1-pbinom(6,size=8,0.5)
pbinom(6,size=8,0.5,lower.tail = TRUE)
pbinom(6,size=8,0.5,lower.tail = FALSE)
qnorm(0.95)
pnorm(10)
pnorm(1)
qnorm(0.95)
mu <- 29
v <- 4.73
1.645*v +mu
qnorm(0.95,mean = 29,sd=4.73)
mu <- 29
v <- 4.73
1.645*v +mu
pnorm(24.27, 29, 4.73)
pnorm(1160,mean = 1020,sd = 50,lower.tail = FALSe)
pnorm(1160,mean = 1020,sd = 50,lower.tail = FALSE)
pnorm(1160,mean = 1020,sd = 50,lower.tail = FALSE) *100
qnorm(0.75,mean=1020,sd=50)
ppois(3,2.5*4)
rbinom(2,500,p=0.01)
rbinom(500,2,p=0.01)
choose(500,2)*0.01^2 *(1-0.01)^498
(choose(500,2)*0.01^2 *(1-0.01)^498) +(choose(500,1)*0.01^1 *(1-0.01)^499)
pbinom(2,500,prob = 0.01)
ppois(2,lambda = 500*0.01)
(-4^2) * 0.2 +1*0.8
16 * 0.2 +1*0.8
4- 1.6^2
16*0.2 +.8
-4 *0.2 +1*0.8
p <- c(.1, .2, .3, .4)
x <- 2 : 5
x
sum(x^2 * p) -sum(x*p)^2
x^2
x^2 * p
sum(x^2 *p)
sum(x*p)
0.2+0.6+0.12+2
0.2+0.6+1.2+2
pbinom(8,10,lower.tail = F)
pbinom(8,10,lower.tail = F,prob = 0.5)
pbinom(8,10,lower.tail = F,prob = 0.5)
choose(10,9)*0.5^10 +choose(10,10) *0.5^10
pnorm(5,mean = 11,sd=2)
ppois(40,lambda = 9*5)
pnorm(93,mean=100,sd=10)
qnorm(0.05,mean=100,sd=10,lower.tail = F)
qnorm(0.05,mean=100,sd=10/sqrt(50),lower.tail = F)
pbinom(4, prob = .5, size = 6, lower.tail = FALSE)
ppois(20,16.5*2)
g
n <- 10000
library(ggplot2)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
rnorm(10)
cumsum(rnorm(10))
?cumsum
q <- rnorm(10)
cumsum(q)
q
-0.7374584 +0.04552519
-1.3969728 -1.3514476 -0.7374584
-1.3969728 +1.3514476 +0.7374584
cumsum
cumsum(1:3)
cumsum(c(1,2,3,-4))
cumsum(c(-1,-1))
cumsum(q
)
pnorm(70,mean=80,sd=10)
qnorm(0.95,mean=1100,sd=75)
qnorm(0.95,mean=1100,sd=75/sqrt(100))
pbinom(3,5,prob = 0.5,lower.tail = F)
ppois(10,5*3)
ppoints(16,15)-ppois(14,15)
ppois(16,15)-ppois(14,15)
pbinom(3,5,prob = 0.5,lower.tail = F)
setwd("F:/Coursera/DataScienceSpecializationCoursera/6_Statistical_Inference")
library(ggplot2)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
library(ggplot2)
g <- ggplot(data.frame(x = 1:n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
means <- cumsum(sample(0:1,n,replace = TRUE))/1:n
g<-ggplot(data.frame(x=1:n,y=means),aes(x=x,y=y))
g<- g + geom_hline(yintercept = 0.5) +geom_line(size=2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_avg_flips(n,c(10,20,30)))
sim_avg_rolls=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,replicate(n=n,mean(sample(1:6,l,replace = TRUE))))
}
res
}
n=10000
data <- data.frame(size=factor(rep(c(1,2,3,4),each=n)),
x=sim_avg_rolls(n,c(1,2,3,4)))
g <- ggplot(data=data,aes(x,fill=size))
g+facet_grid(.~size)+geom_histogram(bins = 20,colour=c('black'))
sim_avg_flips=function(n,n_avg_list){
res <- rep(NA,n*length(n_avg_list))
i=1
for(l in 1:length(n_avg_list)){
while(i<=l*n){
res[i]=mean(rbinom(n_avg_list[l],1,prob = 0.5))
i=i+1
}
}
res
}
n=10000
data <- data.frame(size=factor(rep(c(1,10,20,30),each=n)),
x=sim_avg_flips(n,c(1,10,20,30)))
g <- ggplot(data=data,aes(x,fill=size))
g+facet_grid(.~size)+geom_histogram(bins = 10,colour=c('black'))
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram()
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram()
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(y=...density...)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(y=..density..)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..))
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size,colour="black"))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..))
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
+geom_density()
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density()
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=1)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=0)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=0,size=2)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=0,size=1.5)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(0:1,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=0,size=1.5)
sim_scaled_avg_rolls=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_rolls(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
geom_density(alpha=0,size=1.5)
sim_scaled_avg_rolls=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_rolls(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
stat_function(fun=dnorm)
sim_scaled_avg_rolls=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(1:6,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_rolls(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
stat_function(fun=dnorm,size=2)
sim_scaled_avg_flips=function(n,n_avg_list){
res <- numeric()
for(l in n_avg_list){
res <- c(res,scale(replicate(n=n,mean(sample(0:1,l,replace = TRUE)))))
}
res
}
data <- data.frame(size=factor(rep(c(10,20,30),each=n)),
x=sim_scaled_avg_flips(n,c(10,20,30)))
g <- ggplot(data = data,aes(x,fill=size))
g + facet_grid(.~size) +geom_histogram(aes(y=..density..),colour="black")+
stat_function(fun=dnorm,size=2)
library(UsingR)
data(father.son)
x<father.son$height
library(UsingR)
data(father.son)
x<-father.son$height
(mean(X)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
library(UsingR)
data(father.son)
x<-father.son$height
(mean(x)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
library(UsingR)
data(father.son)
x<-father.son$height
(mean(x))
library(UsingR)
data(father.son)
x<-father.son$height
x
library(UsingR)
data(father.son)
x<-father.son$sheight
(mean(x)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
binom.test(56, 100
)
binom.test(56, 100)$conf.int
library(swirl)
swirl()
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*PDF)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair
ex2_fair - 3.5 ^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(rpois(10,4),10),1,mean))
2/sqrlt(10)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
matrix(rnorm(10000),1000),1,mean)
matrix(rnorm(10000),1000)
dim(matrix(rnorm(10000),1000))
?matrix
1/(2*sqrt(10))
sd(apply(marix(sample(0:1,10000,TRUE),1000),1,mean)
)
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)* 0.8^3 *(0.2)^2
choose(5,3)* 0.8^x *(0.2)^(5-x)
choose(5,x)*(.8)^x*(.2)^(5-x) for x=3,4,5
x<-c(3,4,5);choose(5,x)*(.8)^x*(.2)^(5-x)
x<-c(3,4,5);sum(choose(5,x)*(.8)^x*(.2)^(5-x))
pbinom(2,size=5,prob = 0.8,lower.tail = F)
pbinom(2,size=5,prob = 0.8,lower.tail = FALSE)
qnorm(prob)
qnorm(0.10)
0
cdsfd
dfdsf
rxit()
exit()
x <- c(0.18, -1.54, 0.42, 0.95)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(x*w)
x <- c(0.18, -1.54, 0.42, 0.95)
sum(x*w)
setwd("F:/Coursera/DataScienceSpecializationCoursera/7_Regression_models/Week1")
library(UsingR)
data(galton)
install.packages("reshape")
library(UsingR)
library(reshape)
data(galton)
galton
melt(galton)
head(melt(galton))
library(UsingR)
library(reshape)
library(ggplot2)
data(galton)
long <- melt(galton)
g <- ggplot(long,aes(x=value,fill=variable))
g <- g +geom_histogram(colour="black",binwidth = 1)
g <- g +facet_grid(.~variable)
g
library(UsingR)
library(reshape)
library(ggplot2)
data(galton)
long <- melt(galton)
g <- ggplot(long,aes(x=value,fill=variable))
g <- g +geom_histogram(colour="black",binwidth = 1)
g <- g +facet_grid(.~variable)
g
