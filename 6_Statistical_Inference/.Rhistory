g <- g + geom_point(colour="grey50",aes(size=freq+20))
g <- g + geom_point(aes(colour=freq,size = freq))
g <- g + scale_colour_gradient(low="lightblue",high = "white")
g <- g +geom_smooth(method = "lm")
library(UsingR)
data(galton)
library(dplyr)
freqData <- as.data.frame(table(galton$child,galton$parent))
names(freqData) <- c("child","parent","freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(data=filter(freqData,freq>0),aes(parent,child))
g <- g +scale_size(range = c(2,20),guide="none")
g <- g + geom_point(colour="grey50",aes(size=freq+20))
g <- g + geom_point(aes(colour=freq,size = freq))
g <- g + scale_colour_gradient(low="lightblue",high = "white")
g <- g +geom_smooth(method = "lm")
g
g
library(swirl)
swirl()
install_course("Regression_Models")
swirl()
plot(child~parent,galton)
plot(jitter(child,4),parent,galton)
plot(jitter(child,4)~parent,galton)
regrLine <- lm(child~parent,galton)
regrline <- lm(child~parent,galton)
abline(regrline,lwd=3,col="red")
summary(regrline)
fit <- lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
fit$residuals
cov(fit$residuals,galton$parent)
ols.ic <- fit$coefficients
ols.ic <- fit$coeff[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
0
0
0
0
0
0
0
0
00
0
0
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*x) /sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
data(mtcars)
head(mtcars)
lm(mpg~wt,mtcars)
correlation <- 0.4
1.5*0.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
scale(x)
x  <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
lm(y~x-1)
install.packages("caret")
library(caret)
alpha <- 0.05
mua <- 32
mu0 <- 30
n <- 16
sigma <- 4
z <- qnorm(1-alpha)
pnorm(mu0 + z*sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n),lower.tail = FALSE)
alpha <- 0.05
mua <- 32
mu0 <- 30
n <- 16
sigma <- 4
z <- qnorm(1-alpha)
pnorm(mu0 + z*sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n),lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n),lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n),lower.tail = FALSE)
mu0 + z*sigma/sqrt(n)
pnorm(mu0 + z*sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n),lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n),lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=c(31,32),sd=sigma/sqrt(n),lower.tail = FALSE)
seq(1,2,0.1)
n <- c(8,16,32,64,128)
mua <- seq(30,36,0.5)
n <- c(8,16,32,64,128)
mua <- seq(30,36,0.5)
sigma <- 4/sqrt(n)
sigma
pnorm(mu0 + z*sigma/sqrt(n),mean=c(31,32),sd=sigma,lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=mua,sd=sigma,lower.tail = FALSE)
?repeat
;
?rep
rep(mua,5)
rep(n,each=length(mua))
alpha <- 0.05
power_values < as.numeric()
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in 1:n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=rep(n,each=length(mua)))
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(8),mean=mua,
sd=sigma/sqrt(8),lower.tail = FALSE)
)
power_values
mua
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(8),mean=c(1,2),
sd=sigma/sqrt(8),lower.tail = FALSE)
)
power_values
pnorm(mu0+ z*sigma/sqrt(8),mean=c(1,2),sd=sigma/sqrt(8),lower.tail = FALSE)
pnorm(mu0+ z*sigma/sqrt(8),mean=mua,sd=sigma/sqrt(8),lower.tail = FALSE)
rep(n,each=length(mua))
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in 1:n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in 1:n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=rep(n,each=length(mua)))
power_df
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=rep(n,each=length(mua)))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=n))
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=rep(n,each=length(mua)))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=n))
g + geom_line()
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=rep(n,each=length(mua)))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=factor(n)))
g + geom_line()
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=factor(rep(n,each=length(mua))))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=factor(n)))
g + geom_line()
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.5)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=factor(rep(n,each=length(mua))))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=factor(n)))
g + geom_line(size=1.5)
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.1)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=factor(rep(n,each=length(mua))))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=factor(n)))
g + geom_line(size=1.5)
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.1)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=factor(rep(n,each=length(mua))))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=n))
g + geom_line(size=1.5)
library(ggplot2)
alpha <- 0.05
power_values <- as.numeric()
mua <- seq(30,35,0.1)
mu0 <- 30
n <- c(8,16,32,64,128)
sigma <- 4
z <- qnorm(1-alpha)
for(i in n){
power_values <- c(power_values,pnorm(mu0+ z*sigma/sqrt(i),mean=mua,
sd=sigma/sqrt(i),lower.tail = FALSE)
)
}
power_df <- data.frame(power=power_values,mua=rep(mua,5),n=factor(rep(n,each=length(mua))))
g <- ggplot(data <- power_df,aes(x=mua,y=power,colour=n))
g + geom_line(size=1.5)
g + geom_line(size=1.5)
power.t.test(n=16,delta = 2/4,type = "one.sample",sd=1,alternative = "one.sided")$power
power.t.test(n=16,delta = 2,type = "one.sample",sd=4,alternative = "one.sided")$power
power.t.test(n=16,delta = 100,type = "one.sample",sd=200,alternative = "one.sided")$power
power.t.test(power=0.8,delta = 100,type = "one.sample",sd=200,alternative = "one.sided")$power
power.t.test(power=0.8,delta = 100,type = "one.sample",sd=200,alternative = "one.sided")$n
dat <- data.frame(Subject=1:5,BaseLine = c(140,138,150,148,135),
Week2 = c(132,135,151,146,130))
data
dat <- data.frame(Subject=1:5,BaseLine = c(140,138,150,148,135),
Week2 = c(132,135,151,146,130))
dat
dat <- data.frame(Subject=1:5,BaseLine = c(140,138,150,148,135),
Week2 = c(132,135,151,146,130))
t.test(dat$BaseLine,dat$Week2,paired = TRUE)
power.t.test(n=9,sd=30,power=0.05,type = "one.sample",alternative =
"one.sided")
power.t.test(n=9,sd=30,power=0.05,type = "one.sample",alternative =
"two.sided")
power.t.test(n=9,sd=30,power=0.95,type = "one.sample",alternative =
"two.sided")
1100 -41
data(sleep)
head(sleep)
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
## Calculating directly
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
## using R's built in function
t.test(difference)
## using R's built in function, another format
t.test(g2, g1, paired = TRUE)
## using R's built in function, another format
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
(1100+c(-1,1)*qt(0.975)*30/sqrt(9))
(1100+c(-1,1)*qt(0.975,8)*30/sqrt(9))
data <- data.frame(person=1:4,pepsi=c(0,0,0,1),coke=(1,1,1,0))
data <- data.frame(person=1:4,pepsi=c(0,0,0,1),coke=c(1,1,1,0))
data
data <- data.frame(person=1:4,pepsi=c(0,0,0,1),coke=c(1,1,1,0))
t.test(data$pepsi,data$coke,paired = TRUE)
data <- data.frame(person=1:4,pepsi=c(0,0,0,1),coke=c(1,1,1,0))
t.test(data$pepsi,data$coke)
dat <- data.frame(Subject=1:5,BaseLine = c(140,138,150,148,135),
Week2 = c(132,135,151,146,130))
t.test(dat$BaseLine,dat$Week2,paired = TRUE)
n <- 4
x <-3
test <- binom.test(x=x,n=n,alternative = "greater")
n <- 4
x <-3
test <- binom.test(x=x,n=n,alternative = "greater")
test
rate <- 1/100
e <- 10
days <- 1787
poisson.test(errors,T=days,r=rate,alt="less")
rate <- 1/100
e <- 10
days <- 1787
poisson.test(e,T=days,r=rate,alt="less")
alpha <- 0.05
mua <- 32
mu0 <- 30
n <- 16
sigma <- 4
z <- qnorm(1-alpha)
pnorm(mu0 + z*sigma/sqrt(n),mean=mu0,sd=sigma/sqrt(n),lower.tail = FALSE)
pnorm(mu0 + z*sigma/sqrt(n),mean=mua,sd=sigma/sqrt(n),lower.tail = FALSE)
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "two.sided")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "two.sided",sig.level = 0.10)
power.t.test(n=100,sd=0.04,delta = -0.01,alternative = "two.sided",sig.level = 0.05)
power.t.test(n=100,sd=0.04,delta = -0.01,alternative = "two.sided",sig.level = 0.05,type = "one.sample")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "two.sided",sig.level = 0.05,type = "one.sample")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "two.sided",sig.level = 0.05,type = "one.sided")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "one.sided",sig.level = 0.05,type = "one.sample")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "two.sided",sig.level = 0.10,type = "one.sample")
power.t.test(n=100,sd=0.04,delta = 0.01,alternative = "one.sided",sig.level = 0.05,type = "one.sample")
power.t.test(power = 0.90,sd=0.04,delta = 0.01,alternative = "one.sided",sig.level = 0.05,type = "one.sample")
μ <- 0.01# m^3 brain volume loss mean
σ <- 0.04# m^3 brain volume loss std. dev.
p <- 0.05 # sign level
pow <- 0.9 #power
n <- power.t.test(power=pow, delta=μ, sd=σ , sig.level=p, type="one.sample", alt="one.sided")$n
n
mux <- -3
n <- 9
sdx <- 1.5
muy <- 1
sdy <- 1.8
sdxy <- sqrt(((n-1)*sdx^2 +(n-1)*sdy^2)/(n+n-2))
q <- (mux -muy-0)/(sdxy * sqrt(1/n +1/n))
pt(q,df = n-1)
mux <- -3
n <- 9
sdx <- 1.5
muy <- 1
sdy <- 1.8
sdxy <- sqrt(((n-1)*sdx^2 +(n-1)*sdy^2)/(n+n-2))
q <- (mux -muy-0)/(sdxy * sqrt(1/n +1/n))
pt(q,df = 2*n-1)
n_y <- 9 # subjects treated
n_x <- 9 # subjects placebo
σ_y <- 1.5# kg/m2 std.dev. treated
σ_x <- 1.8# kg/m2 std.dev. placebo
μ_y <- -3#  kg/m2 average difference treated
μ_x <- 1#  kg/m2 average difference placebo
# calculate pooled standard deviation
σ_p <- (((n_x - 1) * σ_x^2 + (n_y - 1) * σ_y^2)/(n_x + n_y - 2))
σ_p
sdxy
sdxy^2
(μ_y - μ_x) / (σ_p * (1 / n_x + 1 / n_y)^.5
)
q
muy
mux <- -3
n <- 9
sdx <- 1.5
muy <- 1
sdy <- 1.8
sdxy <- sqrt(((n-1)*sdx^2 +(n-1)*sdy^2)/(n+n-2))
q <- (mux -muy-0)/(sdxy * sqrt(2/n ))
pt(q,df = 2*n-1)
q
muy - mux
μ_y - μ_x
mux - muy
(sdxy * sqrt(2/n )
)
(σ_p * (1 / n_x + 1 / n_y)^.5)
n_x
n_y
str(ToothGrowth)
str(ToothGrowth)
unique(ToothGrowth$dose)
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +
labs(title="SUppliment Vs Length")
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +
labs(title="Suppliment Type Vs Length")
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +
labs(title="Suppliment Type Vs Length")+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose))
ToothGrowth$dose <- factor(ToothGrowth$dose)
class(ToothGrowth$dose)
ToothGrowth$dose <- factor(ToothGrowth$dose)
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose))+
labs(title="Suppliment Type Vs Length")+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose))+
labs(title="Dose Vs Length")+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +facet_grid(.~dose)+
labs(title="Suppliment Type Vs Length")+
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +
labs(title="Suppliment Type Vs Length")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Suppliment Type")+ylab("Length")
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(supp,len))
g + geom_boxplot(aes(fill=supp)) +facet_grid(.~dose)+
labs(title="Suppliment Type Vs Length")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Suppliment Type")+ylab("Length")
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose))+
labs(title="Dose Vs Length")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Dose (mg/day)")+ylab("Length")
library(ggplot2)
g <- ggplot(data = ToothGrowth,aes(dose,len))
g + geom_boxplot(aes(fill=dose)) + facet_grid(.~supp)+
xlab("Dose (mg/day)")+ylab("Length")
library(data.table)
library(dplyr)
ToothGrowth <- data.table(ToothGrowth)
t.test(len~dose,data=filter(ToothGrowth,dose %in% c(0.5,1)))
t.test(len~supp,data = ToothGrowth)
library(data.table)
library(dplyr)
ToothGrowth <- data.table(ToothGrowth)
t.test(len~dose,data=filter(ToothGrowth,dose %in% c(0.5,2)))
library(data.table)
library(dplyr)
ToothGrowth <- data.table(ToothGrowth)
t.test(len~dose,data=filter(ToothGrowth,dose %in% c(2,1)))
setwd("F:/Coursera/DataScienceSpecializationCoursera/6_Statistical_Inference")
